name: Build, Test, and Release
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    name: Run Tests
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run tests
        run: cargo test --verbose
        shell: cmd

  build:
    name: Build (Windows AMD64)
    runs-on: self-hosted
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build 'clpd' binary 'full' profile
        run: cargo build --profile full --bin clpd
        shell: cmd
      - name: Create artifacts and payload directories
        run: mkdir artifacts && mkdir payload
        shell: cmd

      - name: Copy signed 'clpd' executable to artifacts
        run: copy F:\Rust\target-shared\full\clpd.exe artifacts\clpd.exe
        shell: cmd

      - name: Upload 'clpd' artifact
        uses: actions/upload-artifact@v4
        with:
          name: clpd.exe
          path: artifacts/clpd.exe

  release:
    name: Create Release
    runs-on: self-hosted
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: clpd.exe
          path: release/

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## clpd ${{ steps.get_version.outputs.VERSION }}

            ### Installation
            Download `clpd.exe` and place it in your PATH.

            ### Changes
            See the commit history for details.
          files: |
            release/clpd.exe
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
